package br.com.calculadorapedro.ws.client;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.3.2
 * 2023-09-01T17:00:37.151-03:00
 * Generated source version: 3.3.2
 *
 */
@WebServiceClient(name = "SomarWSService",
                  wsdlLocation = "file:/C:/projetosPessoais/jaxws/calculadoraws/tw-calculadoraPedro-ws/WebContent/wsdl/somarws.wsdl",
                  targetNamespace = "http://ws.calculadorapedro.com.br/")
public class SomarWSService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://ws.calculadorapedro.com.br/", "SomarWSService");
    public final static QName SomarWSPort = new QName("http://ws.calculadorapedro.com.br/", "SomarWSPort");
    static {
        URL url = null;
        try {
            url = new URL("file:/C:/projetosPessoais/jaxws/calculadoraws/tw-calculadoraPedro-ws/WebContent/wsdl/somarws.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(SomarWSService.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "file:/C:/projetosPessoais/jaxws/calculadoraws/tw-calculadoraPedro-ws/WebContent/wsdl/somarws.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public SomarWSService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public SomarWSService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public SomarWSService() {
        super(WSDL_LOCATION, SERVICE);
    }

    public SomarWSService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public SomarWSService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public SomarWSService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns SomarWSEndpoint
     */
    @WebEndpoint(name = "SomarWSPort")
    public SomarWSEndpoint getSomarWSPort() {
        return super.getPort(SomarWSPort, SomarWSEndpoint.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SomarWSEndpoint
     */
    @WebEndpoint(name = "SomarWSPort")
    public SomarWSEndpoint getSomarWSPort(WebServiceFeature... features) {
        return super.getPort(SomarWSPort, SomarWSEndpoint.class, features);
    }

}
